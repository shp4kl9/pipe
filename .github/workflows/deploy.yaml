name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd app
          pip install -r requirements.txt

      - name: Run basic tests
        run: |
          cd app
          python -c "import app; print('App imports successfully')"
          python -c "from app import app; print('Flask app initialized')"

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Deploy with Terraform
        run: |
          cd terraform
          terraform init -input=false
          terraform apply -auto-approve

      - name: Verify deployment
        run: |
          sleep 10
          curl -f http://localhost:8000/health || exit 1
          echo ":)"